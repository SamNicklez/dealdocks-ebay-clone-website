%section.item-page
  - if flash[:success].present?
    %p.success-flash= flash[:success]

  - if flash[:error].present?
    %p.error-flash= flash[:error]

  %h1= @item.title
  %p.item-price= "Price: $#{'%.2f' % @item.price}"

  - if @item.categories.any?
    %p.categories
    %span.label Categories:
    - @item.categories.each do |category|
      = link_to search_path(categories: category[:name]), method: :get, class: 'local-category-button' do
        = category[:name]

  - if @item.images.any?
    .carousel-container
      .carousel-slide
        - @item.images.each_with_index do |image, index|
          = image_tag image.data_uri, alt: "#{@item.title} image #{index}", class: 'item-carousel-image', style: "display: none;"

      %a.carousel-control-prev{ href: "#", onclick: "moveSlide(-1); return false;" }
        %span &laquo; Prev
      %a.carousel-control-next{ href: "#", onclick: "moveSlide(1); return false;" }
        %span Next &raquo;


  .item-action-buttons
    = link_to "View seller's other item's", search_path(seller: @user.username), method: :get, form: {class: 'search-form'}, class: 'search-button'
    - if @item.purchase.user == current_user and !@item.purchase.reviewed?
      = button_to "Leave a Seller Review", search_path(seller: @user.username), method: :get, class: 'buy-button'
    - else
      = button_to "View Seller Reviews", search_path(seller: @user.username), method: :get, class: 'buy-button'


  .item-details
    %p#item-description= @item.description
    .item-attributes
      %p
        %strong Listed on:
        %span= @item.created_at.strftime("%B %d, %Y")
      %p
        %strong Listed by:
        = link_to @user.username, profile_path(id: @user.id)
      %p
        %strong Purchased by:
        %span= @item.purchase.user.username
      %p
        %strong Purchased on:
        %span= @item.purchase.created_at.strftime("%B %d, %Y")
      - if @item.purchase.user == current_user
        %p
          %strong Delivery Status:
          - if Time.current > @item.purchase.created_at + 1.minute
            %span
              Delivered to
              = [@item.purchase.address.shipping_address_1, @item.purchase.address.shipping_address_2].reject(&:blank?).join(', ')
              = [@item.purchase.address.city, @item.purchase.address.state, @item.purchase.address.postal_code].reject(&:blank?).join(', ')
              = @item.purchase.address.country
          -else
            %span
              En Route to
              = [@item.purchase.address.shipping_address_1, @item.purchase.address.shipping_address_2].reject(&:blank?).join(', ')
              = [@item.purchase.address.city, @item.purchase.address.state, @item.purchase.address.postal_code].reject(&:blank?).join(', ')
              = @item.purchase.address.country


- if @item.purchase.user == current_user and !@item.purchase.reviewed?
  %h2 Leave a Review for the Seller
  = form_for Review.new, url: reviews_path do |f|
    = f.hidden_field :item_id, value: @item.id
    = f.hidden_field :reviewer_id, value: @user.id
    = f.hidden_field :seller_id, value: @item.user.id

    = f.label :rating, 'Rating (1 to 5)'
    = f.number_field :rating, in: 1..5

    = f.label :title, 'Review Title'
    = f.text_field :title

    = f.label :content, 'Your Review'
    = f.text_area :content

    = f.submit 'Submit Review', class: 'submit-button'
- elsif @item.purchase.user == current_user
%section.seller-reviews-container
  %h2 Seller Reviews
  - if @reviews.present?
    .reviews-list
      - @reviews.each do |review|
        .review-card
          %h3.review-title= review.title
          %p.review-item
            %strong Item:
            = link_to review.purchase.item.title, item_path(review.purchase.item)
            %p.review-rating Rating:
            .rating-stars
              - review.rating.times do
                %span ★
              - (5 - review.rating).times do
                %span ☆
            %p.review-content= review.content
            %p.review-date= review.created_at.strftime("%B %d, %Y")

            - if review.purchase.user == current_user
              = button_to review_path(review), method: :delete, data: { confirm: 'Are you sure you want to delete this review?' }, class: 'delete-review-button' do
                = hidden_field_tag :item_id, review.purchase.item.id
                = 'Delete'
  - else
    %p No reviews yet for this seller.
